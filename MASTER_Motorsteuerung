#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BNO055.h>
#include <utility/imumaths.h>
#include <SoftwareSerial.h>
#include <PID_v1.h>
#include <Servo.h>

//Initialisierung
//Variablen
int u =1, pos=0, pos1=0;
double gyro_value;

//PID-Regler
double Setpoint, Input, Output;
double Kd=1;
double Ki =0;
double Kp = 5;
PID myPID(&Input, &Output, &Setpoint, Kp, Ki, Kd, DIRECT);

//Bluethooth 
SoftwareSerial mySerial(10, 11); // RX, TX

//BNO-055
Adafruit_BNO055 bno = Adafruit_BNO055(55);

//Servo
Servo myservo;

//Funktionen
//Motor das erste Mal starten
void Motor_hochfahren()
{
  for(pos=0;pos<=90;pos+=1)
  {
      Output = pos;
      myservo.write(Output);
      delay(200);
  }
}

void setup() 
{
  //SerialPorts einrichten
  //Serial.begin(9600);
  Serial.begin(9600);
  
  //Servo-PIN festlegen
  myservo.attach(2, 1000, 2000);

  //PID-Einstellungen festlegen
  //Setpoint = 0;
  myPID.SetMode(AUTOMATIC);
  myPID.SetTunings(Kp,Ki,Kd);
  myPID.SetOutputLimits(-90,90);

  //BNO-055 starten
  bno.begin();
  bno.setExtCrystalUse(true);
  

  //Motor hochspinnen
  //Motor_hochfahren();
}

void loop() 
{
  //Sensorwert abfragen
  imu::Vector<3> gyroscope = bno.getVector(Adafruit_BNO055::VECTOR_GYROSCOPE);
  gyro_value = gyroscope.z();
  //gyro_value = digitalRead(6);

  //PID-Regelung
  myPID.Compute();
  Input = gyro_value;
  myservo.write(Output+90);
  //myservo.write(180);
  //Plotten von Werten
  
  
  //Bluetooth senden
  Serial.print(Input);
  Serial.print(","); 
  Serial.println(Output);

  delay(200);
}
